<?php
/**
 * Variable product add to cart
 *
 * This template can be overridden by copying it to yourtheme/woocommerce/single-product/add-to-cart/variable.php.
 *
 * HOWEVER, on occasion WooCommerce will need to update template files and you
 * (the theme developer) will need to copy the new files to your theme to
 * maintain compatibility. We try to do this as little as possible, but it does
 * happen. When this occurs the version of the template file will be bumped and
 * the readme will list any important changes.
 *
 * @see https://woo.com/document/template-structure/
 * @package WooCommerce\Templates
 * @version 6.1.0
 */

defined( 'ABSPATH' ) || exit;

global $product;



$attribute_keys  = array_keys( $attributes );
$variations_json = wp_json_encode( $available_variations );
$variations_attr = function_exists( 'wc_esc_json' ) ? wc_esc_json( $variations_json ) : _wp_specialchars( $variations_json, ENT_QUOTES, 'UTF-8', true );

do_action( 'woocommerce_before_add_to_cart_form' ); ?>


<form class="variations_form cart" action="<?php echo esc_url( apply_filters( 'woocommerce_add_to_cart_form_action', $product->get_permalink() ) ); ?>" method="post" enctype='multipart/form-data' data-product_id="<?php echo absint( $product->get_id() ); ?>" data-product_variations="<?php echo $variations_attr; // WPCS: XSS ok. ?>">
	<?php do_action( 'woocommerce_before_variations_form' ); ?>

	<?php if ( empty( $available_variations ) && false !== $available_variations ) : ?>
		<p class="stock out-of-stock"><?php echo esc_html( apply_filters( 'woocommerce_out_of_stock_message', __( 'This product is currently out of stock and unavailable.', 'woocommerce' ) ) ); ?></p>
	<?php else : ?>
		<table class="variations" cellspacing="0" role="presentation">
			<tbody>
				<?php foreach ( $attributes as $attribute_name => $options ) : ?>
					<tr>
						
						<td class="value">
							
						<div class="attribute-options-size">
   						 <div class="size_label">
      						  <p class="select-values">
								
								<?php if ($attribute_name === 'Size') : ?>
   								 <?php
    								echo wp_kses(
     										   'Selected ' . wc_attribute_label($attribute_name) . ' <span class="medium-text">Medium</span>  ' . "   " . '<span class="size-guide-text">Size Guide</span>',
     										   array(
        										    'span' => array(
               										'class' => array(),
          										  		),
       											 	)
   												 );
   								 ?>
							<?php endif; ?>
         					  
      						  </p>
   						 </div>
						 
   						 <?php foreach ($options as $option) : ?>
      					  <?php if ($attribute_name === 'Size') : ?>
            <button class="size-button" data-value="<?php echo esc_attr($option); ?>">
                <?php
                $unique_text = '';

                switch ($option) {
                    case 'Medium':
                        $unique_text = '134mm';
                        break;
                    case 'Large':
                        $unique_text = '160mm';
                        break;
                    // Add more cases for each option value
                    // You can customize the unique text for each option here
                    default:
                        $unique_text = '185mm';
                        break;
                }
                ?>
                <h3><?php echo esc_html($unique_text); ?></h>
                <?php echo esc_html($option); ?>
            </button>
        <?php endif; ?>
    <?php endforeach; ?>
</div>



	<div class="attribute-options-color">
    <?php if ( $attribute_name === 'Color' ) : ?>
        <p class="select-values">
            <?php echo esc_html( 'Selected ' . wc_attribute_label( $attribute_name ) . ' ' . esc_attr( $options[2] ) ); ?>
        </p>
    <?php endif; ?>
    <?php foreach ( $options as $option ) : ?>
        <?php if ( $attribute_name === 'Color' ) : ?>
            <button class="<?php echo sanitize_title( $option ); ?>-button color-button" data-value="<?php echo esc_attr( $option ); ?>">
                <?php echo esc_html( $option ); ?>
            </button>
        <?php endif; ?>
    <?php endforeach; ?>
</div>

						</td>
					</tr>
				<?php endforeach; ?>
			</tbody>
		</table>
		<?php do_action( 'woocommerce_after_variations_table' ); ?>

		<div class="single_variation_wrap">
			<?php
			/**
			 * Hook: woocommerce_before_single_variation.
			 */
			do_action( 'woocommerce_before_single_variation' );

			/**
			 * Hook: woocommerce_single_variation. Used to output the cart button and placeholder for variation data.
			 *
			 * @since 2.4.0
			 * @hooked woocommerce_single_variation - 10 Empty div for variation data.
			 * @hooked woocommerce_single_variation_add_to_cart_button - 20 Qty and cart button.
			 */
			do_action( 'woocommerce_single_variation' );

			/**
			 * Hook: woocommerce_after_single_variation.
			 */
			do_action( 'woocommerce_after_single_variation' );
			?>
		</div>
	<?php endif; ?>

	<?php do_action( 'woocommerce_after_variations_form' ); ?>
</form>

<?php
do_action( 'woocommerce_after_add_to_cart_form' );
?>
